import java.util.ArrayList;
import java.util.List;

class Solution {
    public int numOfMinutes(int n, int headID, int[] manager, int[] informTime) {
        List<List<Integer>> graph = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            graph.add(new ArrayList<>());
        }

        for (int i = 0; i < n; i++) {
            if (manager[i] != -1) {
                graph.get(manager[i]).add(i);
            }
        }

        return dfs(graph, headID, informTime);
    }

    private int dfs(List<List<Integer>> graph, int current, int[] informTime) {
        int maxTime = 0;
        for (int subordinate : graph.get(current)) {
            maxTime = Math.max(maxTime, dfs(graph, subordinate, informTime));
        }
        return maxTime + informTime[current];
    }
}
